---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/volumes?key=DONT_SHARE_MY_KEY&q=freedom%20writers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.10.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Content-Type:
      - text/html; charset=UTF-8
      Referrer-Policy:
      - no-referrer
      Content-Length:
      - '1568'
      Date:
      - Tue, 09 Jul 2024 23:17:23 GMT
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ZW4+CiAgPG1ldGEgY2hhcnNldD11dGYtOD4KICA8bWV0YSBuYW1lPXZpZXdwb3J0IGNvbnRlbnQ9ImluaXRpYWwtc2NhbGU9MSwgbWluaW11bS1zY2FsZT0xLCB3aWR0aD1kZXZpY2Utd2lkdGgiPgogIDx0aXRsZT5FcnJvciA0MDQgKE5vdCBGb3VuZCkhITE8L3RpdGxlPgogIDxzdHlsZT4KICAgICp7bWFyZ2luOjA7cGFkZGluZzowfWh0bWwsY29kZXtmb250OjE1cHgvMjJweCBhcmlhbCxzYW5zLXNlcmlmfWh0bWx7YmFja2dyb3VuZDojZmZmO2NvbG9yOiMyMjI7cGFkZGluZzoxNXB4fWJvZHl7bWFyZ2luOjclIGF1dG8gMDttYXgtd2lkdGg6MzkwcHg7bWluLWhlaWdodDoxODBweDtwYWRkaW5nOjMwcHggMCAxNXB4fSogPiBib2R5e2JhY2tncm91bmQ6dXJsKC8vd3d3Lmdvb2dsZS5jb20vaW1hZ2VzL2Vycm9ycy9yb2JvdC5wbmcpIDEwMCUgNXB4IG5vLXJlcGVhdDtwYWRkaW5nLXJpZ2h0OjIwNXB4fXB7bWFyZ2luOjExcHggMCAyMnB4O292ZXJmbG93OmhpZGRlbn1pbnN7Y29sb3I6Izc3Nzt0ZXh0LWRlY29yYXRpb246bm9uZX1hIGltZ3tib3JkZXI6MH1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjc3MnB4KXtib2R5e2JhY2tncm91bmQ6bm9uZTttYXJnaW4tdG9wOjA7bWF4LXdpZHRoOm5vbmU7cGFkZGluZy1yaWdodDowfX0jbG9nb3tiYWNrZ3JvdW5kOnVybCgvL3d3dy5nb29nbGUuY29tL2ltYWdlcy9icmFuZGluZy9nb29nbGVsb2dvLzF4L2dvb2dsZWxvZ29fY29sb3JfMTUweDU0ZHAucG5nKSBuby1yZXBlYXQ7bWFyZ2luLWxlZnQ6LTVweH1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjoxOTJkcGkpeyNsb2dve2JhY2tncm91bmQ6dXJsKC8vd3d3Lmdvb2dsZS5jb20vaW1hZ2VzL2JyYW5kaW5nL2dvb2dsZWxvZ28vMngvZ29vZ2xlbG9nb19jb2xvcl8xNTB4NTRkcC5wbmcpIG5vLXJlcGVhdCAwJSAwJS8xMDAlIDEwMCU7LW1vei1ib3JkZXItaW1hZ2U6dXJsKC8vd3d3Lmdvb2dsZS5jb20vaW1hZ2VzL2JyYW5kaW5nL2dvb2dsZWxvZ28vMngvZ29vZ2xlbG9nb19jb2xvcl8xNTB4NTRkcC5wbmcpIDB9fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzoyKXsjbG9nb3tiYWNrZ3JvdW5kOnVybCgvL3d3dy5nb29nbGUuY29tL2ltYWdlcy9icmFuZGluZy9nb29nbGVsb2dvLzJ4L2dvb2dsZWxvZ29fY29sb3JfMTUweDU0ZHAucG5nKSBuby1yZXBlYXQ7LXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6MTAwJSAxMDAlfX0jbG9nb3tkaXNwbGF5OmlubGluZS1ibG9jaztoZWlnaHQ6NTRweDt3aWR0aDoxNTBweH0KICA8L3N0eWxlPgogIDxhIGhyZWY9Ly93d3cuZ29vZ2xlLmNvbS8+PHNwYW4gaWQ9bG9nbyBhcmlhLWxhYmVsPUdvb2dsZT48L3NwYW4+PC9hPgogIDxwPjxiPjQwNC48L2I+IDxpbnM+VGhhdOKAmXMgYW4gZXJyb3IuPC9pbnM+CiAgPHA+VGhlIHJlcXVlc3RlZCBVUkwgPGNvZGU+L3ZvbHVtZXM8L2NvZGU+IHdhcyBub3QgZm91bmQgb24gdGhpcyBzZXJ2ZXIuICA8aW5zPlRoYXTigJlzIGFsbCB3ZSBrbm93LjwvaW5zPgo=
  recorded_at: Tue, 09 Jul 2024 23:17:23 GMT
- request:
    method: get
    uri: https://www.googleapis.com/books/v1/volumes?key=DONT_SHARE_MY_KEY&q=freedom%20writers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.10.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Fri, 23 Aug 2024 00:25:28 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJraW5kIjogImJvb2tzI3ZvbHVtZXMiLAogICJ0b3RhbEl0ZW1zIjogMTczNSwKICAiaXRlbXMiOiBbCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICIxNHRiVGtRTkFBQUMiLAogICAgICAiZXRhZyI6ICJsdlRRaDdYOENMUSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzLzE0dGJUa1FOQUFBQyIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJUaGUgRnJlZWRvbSBXcml0ZXJzIERpYXJ5ICgyMHRoIEFubml2ZXJzYXJ5IEVkaXRpb24pIiwKICAgICAgICAic3VidGl0bGUiOiAiSG93IGEgVGVhY2hlciBhbmQgMTUwIFRlZW5zIFVzZWQgV3JpdGluZyB0byBDaGFuZ2UgVGhlbXNlbHZlcyBhbmQgdGhlIFdvcmxkIEFyb3VuZCBUaGVtIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJUaGUgRnJlZWRvbSBXcml0ZXJzIiwKICAgICAgICAgICJFcmluIEdydXdlbGwiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIkNyb3duIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIxOTk5LTEwLTEyIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiIzEgTkVXIFlPUksgVElNRVMgQkVTVFNFTExFUiDigKIgVGhlIHR3ZW50aWV0aCBhbm5pdmVyc2FyeSBlZGl0aW9uIG9mIHRoZSBjbGFzc2ljIHN0b3J5IG9mIGFuIGluY3JlZGlibGUgZ3JvdXAgb2Ygc3R1ZGVudHMgYW5kIHRoZSB0ZWFjaGVyIHdobyBpbnNwaXJlZCB0aGVtLCBmZWF0dXJpbmcgdXBkYXRlcyBvbiB0aGUgc3R1ZGVudHPigJkgbGl2ZXMsIG5ldyBqb3VybmFsIGVudHJpZXMsIGFuZCBhbiBpbnRyb2R1Y3Rpb24gYnkgRXJpbiBHcnV3ZWxsIE5vdyBhIHB1YmxpYyB0ZWxldmlzaW9uIGRvY3VtZW50YXJ5LCBGcmVlZG9tIFdyaXRlcnM6IFN0b3JpZXMgZnJvbSB0aGUgSGVhcnQgSW4gMTk5NCwgYW4gaWRlYWxpc3RpYyBmaXJzdC15ZWFyIHRlYWNoZXIgaW4gTG9uZyBCZWFjaCwgQ2FsaWZvcm5pYSwgbmFtZWQgRXJpbiBHcnV3ZWxsIGNvbmZyb250ZWQgYSByb29tIG9mIOKAnHVudGVhY2hhYmxlLCBhdC1yaXNr4oCdIHN0dWRlbnRzLiBTaGUgaGFkIGludGVyY2VwdGVkIGEgbm90ZSB3aXRoIGFuIHVnbHkgcmFjaWFsIGNhcmljYXR1cmUgYW5kIGFuZ3JpbHkgZGVjbGFyZWQgdGhhdCB0aGlzIHdhcyBwcmVjaXNlbHkgdGhlIHNvcnQgb2YgdGhpbmcgdGhhdCBsZWQgdG8gdGhlIEhvbG9jYXVzdC4gU2hlIHdhcyBtZXQgYnkgdW5jb21wcmVoZW5kaW5nIGxvb2tz4oCUbm9uZSBvZiBoZXIgc3R1ZGVudHMgaGFkIGhlYXJkIG9mIG9uZSBvZiB0aGUgZGVmaW5pbmcgbW9tZW50cyBvZiB0aGUgdHdlbnRpZXRoIGNlbnR1cnkuIFNvIHNoZSByZWJvb3RlZCBoZXIgZW50aXJlIGN1cnJpY3VsdW0sIHVzaW5nIHRyZWFzdXJlZCBib29rcyBzdWNoIGFzIEFubmUgRnJhbmvigJlzIGRpYXJ5IGFzIGhlciBndWlkZSB0byBjb21iYXQgaW50b2xlcmFuY2UgYW5kIG1pc3VuZGVyc3RhbmRpbmcuIEhlciBzdHVkZW50cyBiZWdhbiByZWNvcmRpbmcgdGhlaXIgdGhvdWdodHMgYW5kIGZlZWxpbmdzIGluIHRoZWlyIG93biBkaWFyaWVzLCBldmVudHVhbGx5IGR1YmJpbmcgdGhlbXNlbHZlcyB0aGUg4oCcRnJlZWRvbSBXcml0ZXJzLuKAnSBDb25zaXN0aW5nIG9mIHBvd2VyZnVsIGVudHJpZXMgZnJvbSB0aGUgc3R1ZGVudHPigJkgZGlhcmllcyBhbmQgbmFycmF0aXZlIHRleHQgYnkgRXJpbiBHcnV3ZWxsLCBUaGUgRnJlZWRvbSBXcml0ZXJzIERpYXJ5IGlzIGFuIHVuZm9yZ2V0dGFibGUgc3Rvcnkgb2YgaG93IGhhcmQgd29yaywgY291cmFnZSwgYW5kIGRldGVybWluYXRpb24gY2hhbmdlZCB0aGUgbGl2ZXMgb2YgYSB0ZWFjaGVyIGFuZCBoZXIgc3R1ZGVudHMuIEluIHRoZSB0d28gZGVjYWRlcyBzaW5jZSBpdHMgb3JpZ2luYWwgcHVibGljYXRpb24sIHRoZSBib29rIGhhcyBzb2xkIG1vcmUgdGhhbiBvbmUgbWlsbGlvbiBjb3BpZXMgYW5kIGluc3BpcmVkIGEgbWFqb3IgbW90aW9uIHBpY3R1cmUgRnJlZWRvbSBXcml0ZXJzLiBBbmQgbm93LCB3aXRoIHRoaXMgdHdlbnRpZXRoLWFubml2ZXJzYXJ5IGVkaXRpb24sIHJlYWRlcnMgYXJlIGJyb3VnaHQgdXAgdG8gZGF0ZSBvbiB0aGUgbGl2ZXMgb2YgdGhlIEZyZWVkb20gV3JpdGVycywgYXMgdGhleSBibGVuZCBpbmRpc3BlbnNhYmxlIHRha2VzIG9uIHNvY2lhbCBpc3N1ZXMgd2l0aCB1cGxpZnRpbmcgc3RvcmllcyBvZiBhdHRlbmRpbmcgY29sbGVnZeKAlGFuZCB3YXRjaCB0aGVpciBvd24gY2hpbGRyZW4gZm9sbG93IGluIHRoZWlyIGZvb3RzdGVwcy4gVGhlIEZyZWVkb20gV3JpdGVycyBEaWFyeSByZW1haW5zIGEgdml0YWwgcmVhZCBmb3IgYW55b25lIHdobyBiZWxpZXZlcyBpbiBzZWNvbmQgY2hhbmNlcy4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDM4NTQ5NDIyOSIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwMzg1NDk0MjJYIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogZmFsc2UsCiAgICAgICAgICAiaW1hZ2UiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDQ1OCwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkVkdWNhdGlvbiIKICAgICAgICBdLAogICAgICAgICJhdmVyYWdlUmF0aW5nIjogNC41LAogICAgICAgICJyYXRpbmdzQ291bnQiOiAxNCwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC43LjQuMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTE0dGJUa1FOQUFBQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTE0dGJUa1FOQUFBQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD0xNHRiVGtRTkFBQUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1mcmVlZG9tK3dyaXRlcnMmaGw9JmNkPTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD0xNHRiVGtRTkFBQUMmZHE9ZnJlZWRvbSt3cml0ZXJzJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L1RoZV9GcmVlZG9tX1dyaXRlcnNfRGlhcnlfMjB0aF9Bbm5pdmVyc2EuaHRtbD9obD0maWQ9MTR0YlRrUU5BQUFDIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9MTR0YlRrUU5BQUFDJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJBbmQgbm93LCB3aXRoIHRoaXMgdHdlbnRpZXRoLWFubml2ZXJzYXJ5IGVkaXRpb24sIHJlYWRlcnMgYXJlIGJyb3VnaHQgdXAgdG8gZGF0ZSBvbiB0aGUgbGl2ZXMgb2YgdGhlIEZyZWVkb20gV3JpdGVycywgYXMgdGhleSBibGVuZCBpbmRpc3BlbnNhYmxlIHRha2VzIG9uIHNvY2lhbCBpc3N1ZXMgd2l0aCB1cGxpZnRpbmcgc3RvcmllcyBvZiBhdHRlbmRpbmcgY29sbGVnZeKAlGFuZCB3YXRjaCB0aGVpciBvd24gLi4uIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAidkc5aUVBQUFRQkFKIiwKICAgICAgImV0YWciOiAiVno4S05hbEVjMGMiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy92RzlpRUFBQVFCQUoiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiRGVhciBGcmVlZG9tIFdyaXRlciIsCiAgICAgICAgInN1YnRpdGxlIjogIlN0b3JpZXMgb2YgSGFyZHNoaXAgYW5kIEhvcGUgZnJvbSB0aGUgTmV4dCBHZW5lcmF0aW9uIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJUaGUgRnJlZWRvbSBXcml0ZXJzIiwKICAgICAgICAgICJFcmluIEdydXdlbGwiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIkNyb3duIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDIyLTAzLTI5IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHN0dWRlbnRzIG9mIHRvZGF5IHRlbGwgdGhlaXIgc3RvcmllcyBvZiBhZHZlcnNpdHkgYW5kIGdyb3d0aCBpbiBsZXR0ZXJzIHRvIHRoZSBvcmlnaW5hbCBGcmVlZG9tIFdyaXRlcnPigJRhdXRob3JzIG9mIHRoZSAjMSBOZXcgWW9yayBUaW1lcyBiZXN0c2VsbGVyIFRoZSBGcmVlZG9tIFdyaXRlcnMgRGlhcnnigJR3aG8gd3JpdGUgc3VwcG9ydGl2ZSBhbmQgcG93ZXJmdWwgbGV0dGVycyBpbiByZXNwb25zZS4gT3ZlciB0d2VudHkgeWVhcnMgYWdvLCB0aGUgc3R1ZGVudHMgaW4gZmlyc3QteWVhciB0ZWFjaGVyIEVyaW4gR3J1d2VsbOKAmXMgaGlnaCBzY2hvb2wgY2xhc3MgaW4gTG9uZyBCZWFjaCwgQ2FsaWZvcm5pYSwgd2VyZSBsYWJlbGVkIOKAnHVudGVhY2hhYmxl4oCd4oCUYnV0IHNoZSBzYXcgcGFzdCB0aGF0LiBJbnN0ZWFkIG9mIHRyZWF0aW5nIHRoZW0gYXMgc2NvcmVzIG9uIGEgdGVzdCwgc2hlIHVuZGVyc3Rvb2QgdGhhdCBlYWNoIG9mIHRoZW0gaGFkIGEgdW5pcXVlIHN0b3J5IHRvIHRlbGwuIEluc3BpcmVkIGJ5IGJvb2tzIGxpa2UgQW5uZSBGcmFua+KAmXMgZGlhcnksIGhlciBzdHVkZW50cyBiZWdhbiB3cml0aW5nIHRoZWlyIG93biBkaWFyaWVzLCBldmVudHVhbGx5IGR1YmJpbmcgdGhlbXNlbHZlcyB0aGUgRnJlZWRvbSBXcml0ZXJzLiBUb2dldGhlciwgdGhleSBjby1hdXRob3JlZCBUaGUgRnJlZWRvbSBXcml0ZXJzIERpYXJ5LCB3aGljaCBsYXVuY2hlZCBhIG1vdmVtZW50IHRoYXQgcmVtYWlucyBpbmNyZWRpYmx5IHJlbGV2YW50IGFuZCBpbXBhY3RmdWwgdG9kYXkuIFRoZWlyIHN0b3JpZXMgc3BlYWsgdG8geW91bmcgcGVvcGxlIHdobyBmZWVsIGFzIGlmIHRob3NlIGFyb3VuZCB0aGVtIGRvIG5vdCBjYXJlIGFib3V0IHRoZWlyIGxpdmVzLCB0aGVpciBmZWVsaW5ncywgYW5kIHRoZWlyIHN0cnVnZ2xlcy4gVGhleSB3YW50IHRvIGJlIGhlYXJkOyB0aGV5IHdhbnQgdG8gYmUgc2Vlbi4gSW4gRGVhciBGcmVlZG9tIFdyaXRlciwgdGhlIG5leHQgZ2VuZXJhdGlvbiBvZiBGcmVlZG9tIFdyaXRlcnMgc2hhcmVzIGl0cyBzdHJ1Z2dsZXMgd2l0aCBhYnVzZSwgcmFjaXNtLCBkaXNjcmltaW5hdGlvbiwgcG92ZXJ0eSwgbWVudGFsIGhlYWx0aCwgaW1wb3NlZCBib3JkZXJzLCBMR0JUUUlBKyBpZGVudGl0eSwgYW5kIHBvbGljZSB2aW9sZW5jZS4gRWFjaCBzdG9yeSBpcyBhbnN3ZXJlZCB3aXRoIGEgbGV0dGVyIG9mIGFkdmljZSBmcm9tIGFuIG9yaWdpbmFsIEZyZWVkb20gV3JpdGVyLiBXaXRoIGVtcGF0aHkgYW5kIGhvbmVzdHksIHRoZXkgYWRkcmVzcyB0aGVzZSB5b3VuZyBwZW9wbGUgbm90IHdpdGggdGhlIHBsYXRpdHVkZXMgb2YgYSBwb2xpdGljaWFuIG9yIGEgY2VsZWJyaXR5LCBidXQgd2l0aCB0aGUgcHJhZ21hdGljIGFkdmljZSBvZiBwZW9wbGUgd2hvIGhhdmUgZGVhbHQgd2l0aCB0aGVzZSBzYW1lIGlzc3VlcyBhbmQgY29tZSBvdXQgb24gdGhlIG90aGVyIHNpZGUuIFRocm91Z2ggaXRzIGV5ZS1vcGVuaW5nIGFuZCBpbnNwaXJpbmcgc3RvcmllcywgRGVhciBGcmVlZG9tIFdyaXRlciBwYWludHMgYW4gdW5mbGluY2hpbmdseSBob25lc3QgcG9ydHJhaXQgb2YgdG9kYXnigJlzIHlvdXRoIGFuZCBvZmZlcnMgYSBwb3dlcmZ1bCBtZXNzYWdlIG9mIHBlcnNldmVyYW5jZSwgdW5kZXJzdGFuZGluZywgYW5kIGhvcGUuIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA1OTMyMzk4NjUiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEwIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiMDU5MzIzOTg2NSIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiA0NDksCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJFZHVjYXRpb24iCiAgICAgICAgXSwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC4xLjAuMC5wcmV2aWV3LjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXZHOWlFQUFBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXZHOWlFQUFBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD12RzlpRUFBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1mcmVlZG9tK3dyaXRlcnMmaGw9JmNkPTImc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD12RzlpRUFBQVFCQUomZHE9ZnJlZWRvbSt3cml0ZXJzJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0RlYXJfRnJlZWRvbV9Xcml0ZXIuaHRtbD9obD0maWQ9dkc5aUVBQUFRQkFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9dkc5aUVBQUFRQkFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiU0FNUExFIiwKICAgICAgICAicXVvdGVTaGFyaW5nQWxsb3dlZCI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJzZWFyY2hJbmZvIjogewogICAgICAgICJ0ZXh0U25pcHBldCI6ICJJbiBEZWFyIEZyZWVkb20gV3JpdGVyLCB0aGUgbmV4dCBnZW5lcmF0aW9uIG9mIEZyZWVkb20gV3JpdGVycyBzaGFyZXMgaXRzIHN0cnVnZ2xlcyB3aXRoIGFidXNlLCByYWNpc20sIGRpc2NyaW1pbmF0aW9uLCBwb3ZlcnR5LCBtZW50YWwgaGVhbHRoLCBpbXBvc2VkIGJvcmRlcnMsIExHQlRRSUErIGlkZW50aXR5LCBhbmQgcG9saWNlIHZpb2xlbmNlLiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIk9oUHY2NEczazZZQyIsCiAgICAgICJldGFnIjogIjE1S1NHTDZ6b0JnIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvT2hQdjY0RzNrNllDIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIlRlYWNoaW5nIEhvcGUiLAogICAgICAgICJzdWJ0aXRsZSI6ICJTdG9yaWVzIGZyb20gdGhlIEZyZWVkb20gV3JpdGVyIFRlYWNoZXJzIGFuZCBFcmluIEdydXdlbGwiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIlRoZSBGcmVlZG9tIFdyaXRlcnMiLAogICAgICAgICAgIkVyaW4gR3J1d2VsbCIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiQ3Jvd24iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDktMDgtMTgiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmNyZWRpYmxlIHN0b3JpZXMgb2Ygc3RydWdnbGUsIHJlZGVtcHRpb24sIGFuZCB0aGUgcG93ZXIgb2YgZWR1Y2F0aW9uIGZyb20gdGhlIHRlYWNoZXJzIHRhdWdodCBieSBFcmluIEdydXdlbGwgYW5kIHRoZSAjMSBOZXcgWW9yayBUaW1lcyBiZXN0c2VsbGluZyBhdXRob3JzIG9mIFRoZSBGcmVlZG9tIFdyaXRlcnMgRGlhcnkgRG9u4oCZdCBtaXNzIHRoZSBwdWJsaWMgdGVsZXZpc2lvbiBkb2N1bWVudGFyeSBGcmVlZG9tIFdyaXRlcnM6IFN0b3JpZXMgZnJvbSB0aGUgSGVhcnQg4oCcVGhlc2UgYXJlIHRoZSBtb3N0IGluZmx1ZW50aWFsIHByb2Zlc3Npb25hbHMgbW9zdCBvZiB1cyB3aWxsIGV2ZXIgbWVldC4gVGhlIGVmZmVjdHMgb2YgdGhlaXIgd29yayB3aWxsIGxhc3QgZm9yZXZlci7igJ3igJRGcm9tIHRoZSBmb3Jld29yZCBieSBBbm5hIFF1aW5kbGVuIE5vdyBkb2N1bWVudGVkIGluIGEgYmVzdHNlbGxpbmcgYm9vaywgZmVhdHVyZSBmaWxtLCBhbmQgcHVibGljIHRlbGV2aXNpb24gZG9jdW1lbnRhcnksIHRoZSBGcmVlZG9tIFdyaXRlcnMgcGhlbm9tZW5vbiBjYW1lIGFib3V0IGluIDE5OTQsIHdoZW4gRXJpbiBHcnV3ZWxsIHN0ZXBwZWQgaW50byBSb29tIDIwMyBhbmQgYmVnYW4gaGVyIGZpcnN0IHRlYWNoaW5nIGpvYiBvdXQgb2YgY29sbGVnZS4gTG9uZyBCZWFjaCwgQ2FsaWZvcm5pYSwgd2FzIHN0aWxsIHJlZWxpbmcgZnJvbSB0aGUgZGVhZGx5IHZpb2xlbmNlIHRoYXQgZXJ1cHRlZCBkdXJpbmcgdGhlIFJvZG5leSBLaW5nIHJpb3RzLCBhbmQgdGhlIGtpZHMgaW4gRXJpbuKAmXMgY2xhc3Nyb29tIHJlZmxlY3RlZCB0aGUgYW5nZXIsIHJlc2VudG1lbnQsIGFuZCBob3BlbGVzc25lc3Mgb2YgdGhlaXIgY29tbXVuaXR5LiBVbmRhdW50ZWQsIEVyaW4gZm9zdGVyZWQgYW4gZWR1Y2F0aW9uYWwgcGhpbG9zb3BoeSB0aGF0IHZhbHVlZCBhbmQgcHJvbW90ZWQgZGl2ZXJzaXR5LCB0b2xlcmFuY2UsIGFuZCBjb21tdW5pY2F0aW9uLCBhbmQgaW4gdGhlIHByb2Nlc3MsIHNoZSB0cmFuc2Zvcm1lZCBoZXIgc3R1ZGVudHPigJkgbGl2ZXMsIGFzIHdlbGwgYXMgaGVyIG93bi4gRXJpbiBHcnV3ZWxsIGFuZCB0aGUgRnJlZWRvbSBXcml0ZXJzIHdlbnQgb24gdG8gZXN0YWJsaXNoIHRoZSBGcmVlZG9tIFdyaXRlcnMgRm91bmRhdGlvbiB0byByZXBsaWNhdGUgdGhlIHN1Y2Nlc3Mgb2YgUm9vbSAyMDMgYW5kIHByb3ZpZGUgYWxsIHN0dWRlbnRzIHdpdGggaG9wZSBhbmQgb3Bwb3J0dW5pdGllcyB0byByZWFsaXplIHRoZWlyIGFjYWRlbWljIHBvdGVudGlhbC4gU2luY2UgdGhlbiwgdGhlIGZvdW5kYXRpb24gaGFzIHRyYWluZWQgbW9yZSB0aGFuIDgwMCB0ZWFjaGVycyBhcm91bmQgdGhlIHdvcmxkLiBUZWFjaGluZyBIb3BlIHVuaXRlcyB0aGUgdm9pY2VzIG9mIHRoZXNlIEZyZWVkb20gV3JpdGVyIFRlYWNoZXJzLCB3aG8gc2hhcmUgdXBsaWZ0aW5nLCBkZXZhc3RhdGluZywgYW5kIHBvaWduYW50IHN0b3JpZXMgZnJvbSB0aGVpciBjbGFzc3Jvb21zLCBzdG9yaWVzIHRoYXQgcHJvdmlkZSBpbnNpZ2h0IGludG8gdGhlIHN0cnVnZ2xlcyBhbmQgdHJpdW1waHMgb2YgZWR1Y2F0aW9uIGluIGFsbCBvZiBpdHMgZm9ybXMuIE1pcnJvcmluZyBhbiBhY2FkZW1pYyB5ZWFyLCB0aGVzZSBkaXNwYXRjaGVzIGZyb20gdGhlIGZyb250IGxpbmVzIG9mIGVkdWNhdGlvbiB0YWtlIHVzIGZyb20gdGhlIGFudGljaXBhdGlvbiBvZiB0aGUgZmlyc3QgZGF5IHRvIHRoZSBkaXNpbGx1c2lvbm1lbnQsIGNoYWxsZW5nZXMsIGFuZCB0cml1bXBocyBvZiB0aGUgc2Nob29sIHllYXIuIFRoZXNlIGFyZSB0aGUgdm9pY2VzIG9mIHRlYWNoZXJzIHdobyBwZXJzZXZlcmUgaW4gdGhlIGZhY2Ugb2YgaW50b2xlcmFuY2UsIHJpZ2lkIGFkbWluaXN0cmF0aW9uLCBhbmQgY291bnRsZXNzIG90aGVyIGNoYWxsZW5nZXMsIGFuZCBjb250aW51ZSB0byByZWFjaCBvdXQgYW5kIHRlYWNoIHRob3NlIHdobyBhcmUgZGVlbWVkIHVudGVhY2hhYmxlLiBUaGVpciBzdG9yaWVzIGluc3BpcmUgZXZlcnlvbmUgdG8gbWFrZSBhIGRpZmZlcmVuY2UgaW4gdGhlIHdvcmxkIGFyb3VuZCB0aGVtLiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5NzgwMzA3NTg5MjE3IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjAzMDc1ODkyMTgiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiB0cnVlLAogICAgICAgICAgImltYWdlIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgInBhZ2VDb3VudCI6IDM4NSwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIkVkdWNhdGlvbiIKICAgICAgICBdLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IHRydWUsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogIjAuNi4zLjAucHJldmlldy4zIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImltYWdlTGlua3MiOiB7CiAgICAgICAgICAic21hbGxUaHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1PaFB2NjRHM2s2WUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTUmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1PaFB2NjRHM2s2WUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmZWRnZT1jdXJsJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9T2hQdjY0RzNrNllDJnByaW50c2VjPWZyb250Y292ZXImZHE9ZnJlZWRvbSt3cml0ZXJzJmhsPSZjZD0zJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1PaFB2NjRHM2s2WUMmc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9T2hQdjY0RzNrNllDIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJGT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiB0cnVlLAogICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogNS45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDUuOTksCiAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICB9LAogICAgICAgICJidXlMaW5rIjogImh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2Jvb2tzL2RldGFpbHM/aWQ9T2hQdjY0RzNrNllDJnJkaWQ9Ym9vay1PaFB2NjRHM2s2WUMmcmRvdD0xJnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAib2ZmZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAiZmluc2t5T2ZmZXJUeXBlIjogMSwKICAgICAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiA1OTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogNTk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImdpZnRhYmxlIjogdHJ1ZQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAgICAgICJhY3NUb2tlbkxpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvVGVhY2hpbmdfSG9wZS1zYW1wbGUtZXB1Yi5hY3NtP2lkPU9oUHY2NEczazZZQyZmb3JtYXQ9ZXB1YiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9UZWFjaGluZ19Ib3BlLXNhbXBsZS1wZGYuYWNzbT9pZD1PaFB2NjRHM2s2WUMmZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPU9oUHY2NEczazZZQyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiVGhlc2UgYXJlIHRoZSB2b2ljZXMgb2YgdGVhY2hlcnMgd2hvIHBlcnNldmVyZSBpbiB0aGUgZmFjZSBvZiBpbnRvbGVyYW5jZSwgcmlnaWQgYWRtaW5pc3RyYXRpb24sIGFuZCBjb3VudGxlc3Mgb3RoZXIgY2hhbGxlbmdlcywgYW5kIGNvbnRpbnVlIHRvIHJlYWNoIG91dCBhbmQgdGVhY2ggdGhvc2Ugd2hvIGFyZSBkZWVtZWQgdW50ZWFjaGFibGUuIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJib29rcyN2b2x1bWUiLAogICAgICAiaWQiOiAic2NYS1lxdHRwbVlDIiwKICAgICAgImV0YWciOiAiTGFzWTdFUTZQVDAiLAogICAgICAic2VsZkxpbmsiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYm9va3MvdjEvdm9sdW1lcy9zY1hLWXF0dHBtWUMiLAogICAgICAidm9sdW1lSW5mbyI6IHsKICAgICAgICAidGl0bGUiOiAiVGhlIEZyZWVkb20gV3JpdGVycyBEaWFyeSBUZWFjaGVyJ3MgR3VpZGUiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkVyaW4gR3J1d2VsbCIsCiAgICAgICAgICAiVGhlIEZyZWVkb20gV3JpdGVycyIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiQ3Jvd24iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDgtMDktMTYiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIHN0YW5kYXJkcy1iYXNlZCB0ZWFjaGVy4oCZcyBndWlkZSBmcm9tIHRoZSBlZHVjYXRvciBiZWhpbmQgdGhlICMxIE5ldyBZb3JrIFRpbWVzIGJlc3RzZWxsZXIgVGhlIEZyZWVkb20gV3JpdGVycyBEaWFyeSwgd2l0aCBpbm5vdmF0aXZlIHRlYWNoaW5nIHRlY2huaXF1ZXMgdGhhdCB3aWxsIGVuZ2FnZSwgZW1wb3dlciwgYW5kIGVubGlnaHRlbi4gRG9u4oCZdCBtaXNzIHRoZSBwdWJsaWMgdGVsZXZpc2lvbiBkb2N1bWVudGFyeSBGcmVlZG9tIFdyaXRlcnM6IFN0b3JpZXMgZnJvbSB0aGUgSGVhcnQgSW4gcmVzcG9uc2UgdG8gdGhvdXNhbmRzIG9mIGxldHRlcnMgYW5kIGUtbWFpbHMgZnJvbSB0ZWFjaGVycyBhY3Jvc3MgdGhlIGNvdW50cnkgd2hvIGxlYXJuZWQgYWJvdXQgRXJpbiBHcnV3ZWxsIGFuZCBoZXIgYW1hemluZyBzdHVkZW50cyBpbiBUaGUgRnJlZWRvbSBXcml0ZXJzIERpYXJ5IGFuZCB0aGUgaGl0IG1vdmllIEZyZWVkb20gV3JpdGVycywgR3J1d2VsbCBhbmQgYSB0ZWFtIG9mIHRlYWNoZXIgZXhwZXJ0cyBoYXZlIHdyaXR0ZW4gVGhlIEZyZWVkb20gV3JpdGVycyBEaWFyeSBUZWFjaGVy4oCZcyBHdWlkZSwgYSBib29rIHRoYXQgd2lsbCBlbmNvdXJhZ2UgdGVhY2hlcnMgYW5kIHN0dWRlbnRzIHRvIGV4cGFuZCB0aGUgd2FsbHMgb2YgdGhlaXIgY2xhc3Nyb29tcyBhbmQgdGhpbmsgb3V0c2lkZSB0aGUgYm94LiBIZXJlIEdydXdlbGwgZ29lcyBpbiBkZXB0aCBhbmQgc2hhcmVzIGhlciB1bmNvbnZlbnRpb25hbCBidXQgaGlnaGx5IHN1Y2Nlc3NmdWwgZWR1Y2F0aW9uYWwgc3RyYXRlZ2llcyBhbmQgdGVjaG5pcXVlcyAoYWxsIDE1MCBvZiBoZXIgc3R1ZGVudHMsIHdobyBoYWQgYmVlbiBkZWVtZWQg4oCcdW50ZWFjaGFibGUs4oCdIGdyYWR1YXRlZCBmcm9tIFdpbHNvbiBIaWdoIFNjaG9vbCBpbiBMb25nIEJlYWNoLCBDYWxpZm9ybmlhKTogZnJvbSBoZXIgdmVyeSBzdWNjZXNzZnVsIOKAnHRvYXN0IGZvciBjaGFuZ2XigJ0gKGFuIGV4ZXJjaXNlIGluIHdoaWNoIEdydXdlbGwgZXhob3J0ZWQgaGVyIHN0dWRlbnRzIHRvIGxlYXZlIHRoZSBwYXN0IGJlaGluZCBhbmQgc3RhcnQgZnJlc2gpIHRvIHdyaXRpbmcgZXhlcmNpc2VzIHRoYXQgZm9jdXMgb24gdGhlIGltcG9ydGFuY2Ugb2Ygam91cm5hbCB3cml0aW5nLCB2b2NhYnVsYXJ5LCBhbmQgbW9yZS4gSW4gYW4gZWFzeS10by11c2UgZm9ybWF0IHdpdGggYmxhY2stYW5kLXdoaXRlIGlsbHVzdHJhdGlvbnMsIHRoaXMgdGVhY2hlcuKAmXMgZ3VpZGUgd2lsbCBiZWNvbWUgdGhlIGVzc2VudGlhbCBnby10byBtYW51YWwgZm9yIHRlYWNoZXJzIHdobyB3YW50IHRvIG1ha2UgYSBkaWZmZXJlbmNlIGluIHRoZWlyIHB1cGlsc+KAmSBsaXZlcy4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDc2NzkzMjE5NiIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwNzY3OTMyMTk2IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAyNTgsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJFZHVjYXRpb24iCiAgICAgICAgXSwKICAgICAgICAiYXZlcmFnZVJhdGluZyI6IDQsCiAgICAgICAgInJhdGluZ3NDb3VudCI6IDcsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogdHJ1ZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMC43LjUuMC5wcmV2aWV3LjMiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXNjWEtZcXR0cG1ZQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPXNjWEtZcXR0cG1ZQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1zY1hLWXF0dHBtWUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1mcmVlZG9tK3dyaXRlcnMmaGw9JmNkPTQmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXNjWEtZcXR0cG1ZQyZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1zY1hLWXF0dHBtWUMiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiAxMS45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgInJldGFpbFByaWNlIjogewogICAgICAgICAgImFtb3VudCI6IDExLjk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAiYnV5TGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPXNjWEtZcXR0cG1ZQyZyZGlkPWJvb2stc2NYS1lxdHRwbVlDJnJkb3Q9MSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgIm9mZmVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgImZpbnNreU9mZmVyVHlwZSI6IDEsCiAgICAgICAgICAgICJsaXN0UHJpY2UiOiB7CiAgICAgICAgICAgICAgImFtb3VudEluTWljcm9zIjogMTE5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiAxMTk5MDAwMCwKICAgICAgICAgICAgICAiY3VycmVuY3lDb2RlIjogIlVTRCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImdpZnRhYmxlIjogdHJ1ZQogICAgICAgICAgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAgICAgICJhY3NUb2tlbkxpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvVGhlX0ZyZWVkb21fV3JpdGVyc19EaWFyeV9UZWFjaGVyX3NfR3VpZC1zYW1wbGUtZXB1Yi5hY3NtP2lkPXNjWEtZcXR0cG1ZQyZmb3JtYXQ9ZXB1YiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9UaGVfRnJlZWRvbV9Xcml0ZXJzX0RpYXJ5X1RlYWNoZXJfc19HdWlkLXNhbXBsZS1wZGYuYWNzbT9pZD1zY1hLWXF0dHBtWUMmZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPXNjWEtZcXR0cG1ZQyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiSW4gYW4gZWFzeS10by11c2UgZm9ybWF0IHdpdGggYmxhY2stYW5kLXdoaXRlIGlsbHVzdHJhdGlvbnMsIHRoaXMgdGVhY2hlcuKAmXMgZ3VpZGUgd2lsbCBiZWNvbWUgdGhlIGVzc2VudGlhbCBnby10byBtYW51YWwgZm9yIHRlYWNoZXJzIHdobyB3YW50IHRvIG1ha2UgYSBkaWZmZXJlbmNlIGluIHRoZWlyIHB1cGlsc+KAmSBsaXZlcy4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJrX2pTT2EzNnBIWUMiLAogICAgICAiZXRhZyI6ICJOYnhZWUVRYjl4RSIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL2tfalNPYTM2cEhZQyIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJUZWFjaCB3aXRoIFlvdXIgSGVhcnQiLAogICAgICAgICJzdWJ0aXRsZSI6ICJMZXNzb25zIEkgTGVhcm5lZCBmcm9tIHRoZSBGcmVlZG9tIFdyaXRlcnMiLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIkVyaW4gR3J1d2VsbCIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiQ3Jvd24iLAogICAgICAgICJwdWJsaXNoZWREYXRlIjogIjIwMDctMDEtMDkiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgZXh0cmFvcmRpbmFyeSBtZW1vaXIgb2YgdGhlICMxIE5ldyBZb3JrIFRpbWVzIGJlc3RzZWxsaW5nIGF1dGhvciBvZiBUaGUgRnJlZWRvbSBXcml0ZXJzIERpYXJ5LCB3aG/igJlzIGJlZW4gaGFpbGVkIGFzIOKAnGEgdHJ1ZSBpbnNwaXJhdGlvbuKAnSAoSGlsYXJ5IFN3YW5rKSBhbmQg4oCcc2ltcGx5IG1hZ2ljYWwgd2hlbiBpdCBjb21lcyB0byBpbnNwaXJpbmcgcGVvcGxlIHRvIGFjdGlvbuKAnSAoTG9zIEFuZ2VsZXMgVGltZXMpLiBEb27igJl0IG1pc3MgdGhlIHB1YmxpYyB0ZWxldmlzaW9uIGRvY3VtZW50YXJ5IEZyZWVkb20gV3JpdGVyczogU3RvcmllcyBmcm9tIHRoZSBIZWFydCBJbiB0aGlzIHBhc3Npb25hdGUsIHBvaWduYW50LCBhbmQgZGVlcGx5IHBlcnNvbmFsIG1lbW9pciBhbmQgY2FsbCB0byBhcm1zLCBFcmluIEdydXdlbGwsIHRoZSBkeW5hbWljIHRlYWNoZXIgd2hvIG51cnR1cmVkIGFuIGV4dHJhb3JkaW5hcnkgZ3JvdXAgb2YgaGlnaCBzY2hvb2wgc3R1ZGVudHMgZnJvbSBMb25nIEJlYWNoLCBDYWxpZm9ybmlhLCB3aG8gY2FsbGVkIHRoZW1zZWx2ZXMgdGhlIEZyZWVkb20gV3JpdGVycywgcGlja3MgdXAgd2hlcmUgVGhlIEZyZWVkb20gV3JpdGVycyBEaWFyeeKAlGFuZCB0aGUgaGl0IG1vdmllIEZyZWVkb20gV3JpdGVyc+KAlGxlZnQgb2ZmIGFuZCBicmluZ3MgdGhlIHJlYWRlciB1cCB0byBkYXRlIG9uIHdoZXJlIHRoZSBGcmVlZG9tIFdyaXRlcnMgYXJlIHRvZGF5LiBJbmNsdWRpbmcgdGhlaXIgdW5mb3JnZXR0YWJsZSB0cmlwIHRvIEF1c2Nod2l0eiwgd2hlcmUgdGhleSBtZXQgd2l0aCBIb2xvY2F1c3Qgc3Vydml2b3JzOyB0aGVpciB0b3VyIG9mIHRoZSBhdHRpYyBvZiB0aGVpciBiZWxvdmVkIEFubmUgRnJhbms7IGFuZCB0aGVpciB2aXNpdCB0byBCb3NuaWEgd2l0aCB0aGVpciBmcmllbmQgWmxhdGEgRmlsaXBvdmnEhywgVGVhY2ggV2l0aCBZb3VyIEhlYXJ0IGNocm9uaWNsZXMgd2hhdCBoYXBwZW5lZCB3aXRoIHRoZSBGcmVlZG9tIFdyaXRlcnMgYXMgdGhleSBtYWRlIHRoZWlyIHdheSB0aHJvdWdoIGNvbGxlZ2UgYW5kIGJleW9uZC4gQWxvbmcgdGhlIHdheSwgR3J1d2VsbCBpbmNsdWRlcyBsZXNzb25zIGZvciBwYXJlbnRzIGFuZCB0ZWFjaGVycyBhYm91dCB3aGF0IHNoZSBsZWFybmVkIGZyb20gaGVyIHJlbWFya2FibGUgYmFuZCBvZiBzdHVkZW50cyBhcyBzaGUgdHJhdmVsZWQgdGhyb3VnaCB0aGUgZW1vdGlvbmFsIHBlYWtzIGFuZCB2YWxsZXlzIG9uIHRoZSBmcm9udCBsaW5lcyBvZiBvdXIgbmF0aW9u4oCZcyBlZHVjYXRpb25hbCBzeXN0ZW0uIEEgbWVzbWVyaXppbmcgc3Rvcnkgb2Ygb25lIHlvdW5nIHdvbWFu4oCZcyBwZXJzb25hbCBvZHlzc2V5IGFuZCBvZiBoZXIgdW5pcXVlIGFiaWxpdHkgdG8gZW5jb3VyYWdlIG90aGVycyB0byBmb2xsb3cgaW4gaGVyIGZvb3RzdGVwcywgVGVhY2ggV2l0aCBZb3VyIEhlYXJ0IGlzIG1hcmtlZCBieSB0aGUgZW52aWFibGUgcmFkaWFuY2UgYW5kIGlycmVwcmVzc2libGUgZm9yY2Ugb2YgbmF0dXJlIHRoYXQgYXJlIEVyaW4gR3J1d2VsbCBhbmQgaGVyIHVuYmVsaWV2YWJsZSBkZXRlcm1pbmF0aW9uIHRvIGVuc3VyZSB0aGF0IGVkdWNhdGlvbiBpbiB0aGUgVW5pdGVkIFN0YXRlcyB0cnVseSBtZWV0cyB0aGUgbmVlZHMgb2YgZXZlcnkgc3R1ZGVudC4iLAogICAgICAgICJpbmR1c3RyeUlkZW50aWZpZXJzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDc2NzkyNzM3NiIKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwNzY3OTI3MzcwIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInJlYWRpbmdNb2RlcyI6IHsKICAgICAgICAgICJ0ZXh0IjogdHJ1ZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAyNzQsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJCaW9ncmFwaHkgJiBBdXRvYmlvZ3JhcGh5IgogICAgICAgIF0sCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogdHJ1ZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMS42LjQuMC5wcmV2aWV3LjMiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPWtfalNPYTM2cEhZQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPWtfalNPYTM2cEhZQyZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1rX2pTT2EzNnBIWUMmcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1mcmVlZG9tK3dyaXRlcnMmaGw9JmNkPTUmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9ib29rcy9kZXRhaWxzP2lkPWtfalNPYTM2cEhZQyZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1rX2pTT2EzNnBIWUMiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIkZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IHRydWUsCiAgICAgICAgImxpc3RQcmljZSI6IHsKICAgICAgICAgICJhbW91bnQiOiA0Ljk5LAogICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgfSwKICAgICAgICAicmV0YWlsUHJpY2UiOiB7CiAgICAgICAgICAiYW1vdW50IjogNC45OSwKICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgIH0sCiAgICAgICAgImJ1eUxpbmsiOiAiaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20vc3RvcmUvYm9va3MvZGV0YWlscz9pZD1rX2pTT2EzNnBIWUMmcmRpZD1ib29rLWtfalNPYTM2cEhZQyZyZG90PTEmc291cmNlPWdic19hcGkiLAogICAgICAgICJvZmZlcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJmaW5za3lPZmZlclR5cGUiOiAxLAogICAgICAgICAgICAibGlzdFByaWNlIjogewogICAgICAgICAgICAgICJhbW91bnRJbk1pY3JvcyI6IDQ5OTAwMDAsCiAgICAgICAgICAgICAgImN1cnJlbmN5Q29kZSI6ICJVU0QiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJyZXRhaWxQcmljZSI6IHsKICAgICAgICAgICAgICAiYW1vdW50SW5NaWNyb3MiOiA0OTkwMDAwLAogICAgICAgICAgICAgICJjdXJyZW5jeUNvZGUiOiAiVVNEIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiZ2lmdGFibGUiOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgXQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIlBBUlRJQUwiLAogICAgICAgICJlbWJlZGRhYmxlIjogdHJ1ZSwKICAgICAgICAicHVibGljRG9tYWluIjogZmFsc2UsCiAgICAgICAgInRleHRUb1NwZWVjaFBlcm1pc3Npb24iOiAiQUxMT1dFRCIsCiAgICAgICAgImVwdWIiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9UZWFjaF93aXRoX1lvdXJfSGVhcnQtc2FtcGxlLWVwdWIuYWNzbT9pZD1rX2pTT2EzNnBIWUMmZm9ybWF0PWVwdWImb3V0cHV0PWFjczRfZnVsZmlsbG1lbnRfdG9rZW4mZGxfdHlwZT1zYW1wbGUmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAgICAgICJhY3NUb2tlbkxpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvVGVhY2hfd2l0aF9Zb3VyX0hlYXJ0LXNhbXBsZS1wZGYuYWNzbT9pZD1rX2pTT2EzNnBIWUMmZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPWtfalNPYTM2cEhZQyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiQSBtZXNtZXJpemluZyBzdG9yeSBvZiBvbmUgeW91bmcgd29tYW7igJlzIHBlcnNvbmFsIG9keXNzZXkgYW5kIG9mIGhlciB1bmlxdWUgYWJpbGl0eSB0byBlbmNvdXJhZ2Ugb3RoZXJzIHRvIGZvbGxvdyBpbiBoZXIgZm9vdHN0ZXBzLCBUZWFjaCBXaXRoIFlvdXIgSGVhcnQgaXMgbWFya2VkIGJ5IHRoZSBlbnZpYWJsZSByYWRpYW5jZSBhbmQgaXJyZXByZXNzaWJsZSBmb3JjZSBvZiBuYXR1cmUgdGhhdCBhcmUgRXJpbiAuLi4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJsS2FkUHdBQUNBQUoiLAogICAgICAiZXRhZyI6ICIwOExSeTJEZ2M4ZyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL2xLYWRQd0FBQ0FBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJabGF0YSdzIERpYXJ5IiwKICAgICAgICAic3VidGl0bGUiOiAiQSBDaGlsZCdzIExpZmUgaW4gU2FyYWpldm8iLAogICAgICAgICJhdXRob3JzIjogWwogICAgICAgICAgIlpsYXRhIEZpbGlwb3ZpYyIKICAgICAgICBdLAogICAgICAgICJwdWJsaXNoZXIiOiAiUGVyZmVjdGlvbiBMZWFybmluZyIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAwNi0wMi0yOCIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjb21wZWxsaW5nIGZpcnN0aGFuZCBhY2NvdW50IG9mIHRoZSB3YXIgaW4gU2FyYWpldm8gdGhyb3VnaCB0aGUgZXllcyBvZiBhIHlvdW5nIENyb2F0aWFuIGdpcmwuIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA3NTY5NjgxOTQiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDc1Njk2ODE5OSIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAxOTcsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAicHJldmlldy0xLjAuMCIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9bEthZFB3QUFDQUFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAgICJ0aHVtYm5haWwiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvY29udGVudD9pZD1sS2FkUHdBQUNBQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZpbWc9MSZ6b29tPTEmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1sS2FkUHdBQUNBQUomZHE9ZnJlZWRvbSt3cml0ZXJzJmhsPSZjZD02JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiaW5mb0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9bEthZFB3QUFDQUFKJmRxPWZyZWVkb20rd3JpdGVycyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJjYW5vbmljYWxWb2x1bWVMaW5rIjogImh0dHBzOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9hYm91dC9abGF0YV9zX0RpYXJ5Lmh0bWw/aGw9JmlkPWxLYWRQd0FBQ0FBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiTk9fUEFHRVMiLAogICAgICAgICJlbWJlZGRhYmxlIjogZmFsc2UsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9bEthZFB3QUFDQUFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiTk9ORSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiVGhlIGNvbXBlbGxpbmcgZmlyc3RoYW5kIGFjY291bnQgb2YgdGhlIHdhciBpbiBTYXJhamV2byB0aHJvdWdoIHRoZSBleWVzIG9mIGEgeW91bmcgQ3JvYXRpYW4gZ2lybC4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJfSkE4dEFFQUNBQUoiLAogICAgICAiZXRhZyI6ICJoVFBPenFrUG5nYyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL19KQTh0QUVBQ0FBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJUaGUgRnJlZWRvbSBXcml0ZXJzIERpYXJ5IiwKICAgICAgICAic3VidGl0bGUiOiAiSG93IGEgVGVhY2hlciBhbmQgMTUwIFRlZW5zIFVzZWQgV3JpdGluZyB0byBDaGFuZ2UgVGhlbXNlbHZlcyBhbmQgdGhlIFdvcmxkIEFyb3VuZCBUaGVtIiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJGcmVlZG9tIFdyaXRlcnMiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDEwIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiT1RIRVIiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICJPQ0xDOjEwMTIxNTcyMTAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicHJpbnRUeXBlIjogIkJPT0siLAogICAgICAgICJjYXRlZ29yaWVzIjogWwogICAgICAgICAgIlRlZW5hZ2VycyIKICAgICAgICBdLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICJwcmV2aWV3LTEuMC4wIiwKICAgICAgICAicGFuZWxpemF0aW9uU3VtbWFyeSI6IHsKICAgICAgICAgICJjb250YWluc0VwdWJCdWJibGVzIjogZmFsc2UsCiAgICAgICAgICAiY29udGFpbnNJbWFnZUJ1YmJsZXMiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9X0pBOHRBRUFDQUFKJmRxPWZyZWVkb20rd3JpdGVycyZobD0mY2Q9NyZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPV9KQTh0QUVBQ0FBSiZkcT1mcmVlZG9tK3dyaXRlcnMmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvVGhlX0ZyZWVkb21fV3JpdGVyc19EaWFyeS5odG1sP2hsPSZpZD1fSkE4dEFFQUNBQUoiCiAgICAgIH0sCiAgICAgICJzYWxlSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInNhbGVhYmlsaXR5IjogIk5PVF9GT1JfU0FMRSIsCiAgICAgICAgImlzRWJvb2siOiBmYWxzZQogICAgICB9LAogICAgICAiYWNjZXNzSW5mbyI6IHsKICAgICAgICAiY291bnRyeSI6ICJVUyIsCiAgICAgICAgInZpZXdhYmlsaXR5IjogIk5PX1BBR0VTIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IGZhbHNlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPV9KQTh0QUVBQ0FBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIk5PTkUiLAogICAgICAgICJxdW90ZVNoYXJpbmdBbGxvd2VkIjogZmFsc2UKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAiYm9va3Mjdm9sdW1lIiwKICAgICAgImlkIjogIm1MZXVDUUFBUUJBSiIsCiAgICAgICJldGFnIjogIjNlM3BxdVBMZThNIiwKICAgICAgInNlbGZMaW5rIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Jvb2tzL3YxL3ZvbHVtZXMvbUxldUNRQUFRQkFKIiwKICAgICAgInZvbHVtZUluZm8iOiB7CiAgICAgICAgInRpdGxlIjogIlJlZmxlY3Rpb25zIGFuZCBJbnRlcnByZXRhdGlvbnMiLAogICAgICAgICJzdWJ0aXRsZSI6ICItIHRoZSBGcmVlZG9tIFdyaXRlcnMnIHRlYWNoaW5nIG1ldGhvZG9sb2d5IiwKICAgICAgICAiYXV0aG9ycyI6IFsKICAgICAgICAgICJUb3JiasO4cm4gWWRlZ2FhcmQgKEVkLikiCiAgICAgICAgXSwKICAgICAgICAicHVibGlzaGVyIjogIkJvRCDigJMgQm9va3Mgb24gRGVtYW5kIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIyMDE1LTA1LTI2IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiXCJSZWZsZWN0aW9ucyBhbmQgSW50ZXJwcmV0YXRpb25zXCIgaXMgYW4gYW50aG9sb2d5IG9uIFRoZSBGcmVlZG9tIFdyaXRlcnPigJkgbWV0aG9kb2xvZ3kuIEl0IGlzIGFuIGFudGhvbG9neSBmb3IgYWxsIHRob3NlIHdpdGggYSBwcm9mZXMtc2lvbmFsIG5lZWQgZm9yIHRleHRzIGV4cGxhaW5pbmcsIG5vdCBvbmx5IGhvdyBUaGUgRnJlZWRvbSBXcml0ZXJz4oCZIHRvb2xzIGFyZSBiZWluZyB1c2VkLCBidXQgYWxzbyB3aHkgdGhleSB3b3JrIHNvIGNvbnZpbmNpbmdseSB3ZWxsLiBJdCBpcyBub3QgYW4gYW50aG9sb2d5IG9mIGd1aWRlbGluZXM7IGl0IGlzIGFuIGFudGhvbG9neSBvZiBleHBsYW5hdGlvbnMgYmFzZWQgb24gdGhlb3J5LiBBbmQgaXQgaXMgYW4gYW50aG9sb2d5IHdyaXR0ZW4gYnkgRnJlZWRvbSBXcml0ZXIgVGVhY2hlcnMg4oCTIHdobyBlbHNlIGNvdWxkIGRvIGl0PyIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTMiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICI5Nzg4NzcxNzAyMjI0IgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjg3NzE3MDIyMjkiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAxNTAsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAibWF0dXJpdHlSYXRpbmciOiAiTk9UX01BVFVSRSIsCiAgICAgICAgImFsbG93QW5vbkxvZ2dpbmciOiBmYWxzZSwKICAgICAgICAiY29udGVudFZlcnNpb24iOiAiMS4xLjEuMC5wcmV2aWV3LjEiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPW1MZXVDUUFBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiLAogICAgICAgICAgInRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPW1MZXVDUUFBUUJBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209MSZlZGdlPWN1cmwmc291cmNlPWdic19hcGkiCiAgICAgICAgfSwKICAgICAgICAibGFuZ3VhZ2UiOiAiZW4iLAogICAgICAgICJwcmV2aWV3TGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1tTGV1Q1FBQVFCQUomcHJpbnRzZWM9ZnJvbnRjb3ZlciZkcT1mcmVlZG9tK3dyaXRlcnMmaGw9JmNkPTgmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD1tTGV1Q1FBQVFCQUomZHE9ZnJlZWRvbSt3cml0ZXJzJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L1JlZmxlY3Rpb25zX2FuZF9JbnRlcnByZXRhdGlvbnMuaHRtbD9obD0maWQ9bUxldUNRQUFRQkFKIgogICAgICB9LAogICAgICAic2FsZUluZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJzYWxlYWJpbGl0eSI6ICJOT1RfRk9SX1NBTEUiLAogICAgICAgICJpc0Vib29rIjogZmFsc2UKICAgICAgfSwKICAgICAgImFjY2Vzc0luZm8iOiB7CiAgICAgICAgImNvdW50cnkiOiAiVVMiLAogICAgICAgICJ2aWV3YWJpbGl0eSI6ICJQQVJUSUFMIiwKICAgICAgICAiZW1iZWRkYWJsZSI6IHRydWUsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiB0cnVlLAogICAgICAgICAgImFjc1Rva2VuTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9kb3dubG9hZC9SZWZsZWN0aW9uc19hbmRfSW50ZXJwcmV0YXRpb25zLXNhbXBsZS1wZGYuYWNzbT9pZD1tTGV1Q1FBQVFCQUomZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPW1MZXVDUUFBUUJBSiZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiJnF1b3Q7UmVmbGVjdGlvbnMgYW5kIEludGVycHJldGF0aW9ucyZxdW90OyBpcyBhbiBhbnRob2xvZ3kgb24gVGhlIEZyZWVkb20gV3JpdGVyc+KAmSBtZXRob2RvbG9neS4iCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICJfMEE2cXF4RkZ3QUMiLAogICAgICAiZXRhZyI6ICJ6RVVROGZSL3IvbyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzL18wQTZxcXhGRndBQyIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJBbGljZSBXYWxrZXIiLAogICAgICAgICJzdWJ0aXRsZSI6ICJGcmVlZG9tIFdyaXRlciIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiQ2Fyb2xpbmUgRXZlbnNlbiBMYXpvIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJUd2VudHktRmlyc3QgQ2VudHVyeSBCb29rcyIsCiAgICAgICAgInB1Ymxpc2hlZERhdGUiOiAiMjAwMC0wMS0wMSIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkRpc2N1c3NlcyB0aGUgcGVyc29uYWwgbGlmZSBhbmQgbGl0ZXJhcnkgY2FyZWVyIG9mIHRoZSBBZnJpY2FuIEFtZXJpY2FuIHdvbWFuIHdobyB3b24gdGhlIFB1bGl0emVyIFByaXplIGZvciBoZXIgbm92ZWwsIFwiVGhlIENvbG9yIFB1cnBsZS5cIiIsCiAgICAgICAgImluZHVzdHJ5SWRlbnRpZmllcnMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIklTQk5fMTAiLAogICAgICAgICAgICAiaWRlbnRpZmllciI6ICIwODIyNTQ5NjAzIgogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMyIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjk3ODA4MjI1NDk2MDQiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicmVhZGluZ01vZGVzIjogewogICAgICAgICAgInRleHQiOiBmYWxzZSwKICAgICAgICAgICJpbWFnZSI6IHRydWUKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAxMjAsCiAgICAgICAgInByaW50VHlwZSI6ICJCT09LIiwKICAgICAgICAiY2F0ZWdvcmllcyI6IFsKICAgICAgICAgICJKdXZlbmlsZSBOb25maWN0aW9uIgogICAgICAgIF0sCiAgICAgICAgImF2ZXJhZ2VSYXRpbmciOiA1LAogICAgICAgICJyYXRpbmdzQ291bnQiOiAxLAogICAgICAgICJtYXR1cml0eVJhdGluZyI6ICJOT1RfTUFUVVJFIiwKICAgICAgICAiYWxsb3dBbm9uTG9nZ2luZyI6IGZhbHNlLAogICAgICAgICJjb250ZW50VmVyc2lvbiI6ICIwLjguNy4wLnByZXZpZXcuMSIsCiAgICAgICAgInBhbmVsaXphdGlvblN1bW1hcnkiOiB7CiAgICAgICAgICAiY29udGFpbnNFcHViQnViYmxlcyI6IGZhbHNlLAogICAgICAgICAgImNvbnRhaW5zSW1hZ2VCdWJibGVzIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJpbWFnZUxpbmtzIjogewogICAgICAgICAgInNtYWxsVGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9XzBBNnFxeEZGd0FDJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT01JmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9XzBBNnFxeEZGd0FDJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJmVkZ2U9Y3VybCZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJsYW5ndWFnZSI6ICJlbiIsCiAgICAgICAgInByZXZpZXdMaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPV8wQTZxcXhGRndBQyZwcmludHNlYz1mcm9udGNvdmVyJmRxPWZyZWVkb20rd3JpdGVycyZobD0mY2Q9OSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImluZm9MaW5rIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzP2lkPV8wQTZxcXhGRndBQyZkcT1mcmVlZG9tK3dyaXRlcnMmaGw9JnNvdXJjZT1nYnNfYXBpIiwKICAgICAgICAiY2Fub25pY2FsVm9sdW1lTGluayI6ICJodHRwczovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvYWJvdXQvQWxpY2VfV2Fsa2VyLmh0bWw/aGw9JmlkPV8wQTZxcXhGRndBQyIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiUEFSVElBTCIsCiAgICAgICAgImVtYmVkZGFibGUiOiB0cnVlLAogICAgICAgICJwdWJsaWNEb21haW4iOiBmYWxzZSwKICAgICAgICAidGV4dFRvU3BlZWNoUGVybWlzc2lvbiI6ICJBTExPV0VEIiwKICAgICAgICAiZXB1YiI6IHsKICAgICAgICAgICJpc0F2YWlsYWJsZSI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAicGRmIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogdHJ1ZSwKICAgICAgICAgICJhY3NUb2tlbkxpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3MvZG93bmxvYWQvQWxpY2VfV2Fsa2VyLXNhbXBsZS1wZGYuYWNzbT9pZD1fMEE2cXF4RkZ3QUMmZm9ybWF0PXBkZiZvdXRwdXQ9YWNzNF9mdWxmaWxsbWVudF90b2tlbiZkbF90eXBlPXNhbXBsZSZzb3VyY2U9Z2JzX2FwaSIKICAgICAgICB9LAogICAgICAgICJ3ZWJSZWFkZXJMaW5rIjogImh0dHA6Ly9wbGF5Lmdvb2dsZS5jb20vYm9va3MvcmVhZGVyP2lkPV8wQTZxcXhGRndBQyZobD0mc291cmNlPWdic19hcGkiLAogICAgICAgICJhY2Nlc3NWaWV3U3RhdHVzIjogIlNBTVBMRSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiRGlzY3Vzc2VzIHRoZSBwZXJzb25hbCBsaWZlIGFuZCBsaXRlcmFyeSBjYXJlZXIgb2YgdGhlIEFmcmljYW4gQW1lcmljYW4gd29tYW4gd2hvIHdvbiB0aGUgUHVsaXR6ZXIgUHJpemUgZm9yIGhlciBub3ZlbCwgJnF1b3Q7VGhlIENvbG9yIFB1cnBsZS4mcXVvdDsiCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogImJvb2tzI3ZvbHVtZSIsCiAgICAgICJpZCI6ICIwdHhzQUFBQUNBQUoiLAogICAgICAiZXRhZyI6ICJHOVVrYkdBYndsZyIsCiAgICAgICJzZWxmTGluayI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9ib29rcy92MS92b2x1bWVzLzB0eHNBQUFBQ0FBSiIsCiAgICAgICJ2b2x1bWVJbmZvIjogewogICAgICAgICJ0aXRsZSI6ICJEdXJhbmdvIFN0cmVldCIsCiAgICAgICAgImF1dGhvcnMiOiBbCiAgICAgICAgICAiRnJhbmsgQm9uaGFtIgogICAgICAgIF0sCiAgICAgICAgInB1Ymxpc2hlciI6ICJUdXJ0bGViYWNrIEJvb2tzIiwKICAgICAgICAicHVibGlzaGVkRGF0ZSI6ICIxOTk5IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiRm9yIHVzZSBpbiBzY2hvb2xzIGFuZCBsaWJyYXJpZXMgb25seS4gUnVmdXMgSGVucnksIGEgeW91bmcgcGFyb2xlZSwgamVvcGFyZGl6ZXMgaGlzIGxpZmUgd2hlbiBoZSByZWZ1c2VzIHRvIGNvb3BlcmF0ZSB3aXRoIHRoZSBuZWlnaGJvcmhvb2Qgc3RyZWV0IGdhbmcuIiwKICAgICAgICAiaW5kdXN0cnlJZGVudGlmaWVycyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgInR5cGUiOiAiSVNCTl8xMCIsCiAgICAgICAgICAgICJpZGVudGlmaWVyIjogIjA2MTMxMTQ5OVgiCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJJU0JOXzEzIiwKICAgICAgICAgICAgImlkZW50aWZpZXIiOiAiOTc4MDYxMzExNDk5OCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJyZWFkaW5nTW9kZXMiOiB7CiAgICAgICAgICAidGV4dCI6IGZhbHNlLAogICAgICAgICAgImltYWdlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwYWdlQ291bnQiOiAwLAogICAgICAgICJwcmludFR5cGUiOiAiQk9PSyIsCiAgICAgICAgIm1hdHVyaXR5UmF0aW5nIjogIk5PVF9NQVRVUkUiLAogICAgICAgICJhbGxvd0Fub25Mb2dnaW5nIjogZmFsc2UsCiAgICAgICAgImNvbnRlbnRWZXJzaW9uIjogInByZXZpZXctMS4wLjAiLAogICAgICAgICJwYW5lbGl6YXRpb25TdW1tYXJ5IjogewogICAgICAgICAgImNvbnRhaW5zRXB1YkJ1YmJsZXMiOiBmYWxzZSwKICAgICAgICAgICJjb250YWluc0ltYWdlQnViYmxlcyI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiaW1hZ2VMaW5rcyI6IHsKICAgICAgICAgICJzbWFsbFRodW1ibmFpbCI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcy9jb250ZW50P2lkPTB0eHNBQUFBQ0FBSiZwcmludHNlYz1mcm9udGNvdmVyJmltZz0xJnpvb209NSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgICAidGh1bWJuYWlsIjogImh0dHA6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2NvbnRlbnQ/aWQ9MHR4c0FBQUFDQUFKJnByaW50c2VjPWZyb250Y292ZXImaW1nPTEmem9vbT0xJnNvdXJjZT1nYnNfYXBpIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogImVuIiwKICAgICAgICAicHJldmlld0xpbmsiOiAiaHR0cDovL2Jvb2tzLmdvb2dsZS5jb20vYm9va3M/aWQ9MHR4c0FBQUFDQUFKJmRxPWZyZWVkb20rd3JpdGVycyZobD0mY2Q9MTAmc291cmNlPWdic19hcGkiLAogICAgICAgICJpbmZvTGluayI6ICJodHRwOi8vYm9va3MuZ29vZ2xlLmNvbS9ib29rcz9pZD0wdHhzQUFBQUNBQUomZHE9ZnJlZWRvbSt3cml0ZXJzJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImNhbm9uaWNhbFZvbHVtZUxpbmsiOiAiaHR0cHM6Ly9ib29rcy5nb29nbGUuY29tL2Jvb2tzL2Fib3V0L0R1cmFuZ29fU3RyZWV0Lmh0bWw/aGw9JmlkPTB0eHNBQUFBQ0FBSiIKICAgICAgfSwKICAgICAgInNhbGVJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAic2FsZWFiaWxpdHkiOiAiTk9UX0ZPUl9TQUxFIiwKICAgICAgICAiaXNFYm9vayI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJhY2Nlc3NJbmZvIjogewogICAgICAgICJjb3VudHJ5IjogIlVTIiwKICAgICAgICAidmlld2FiaWxpdHkiOiAiTk9fUEFHRVMiLAogICAgICAgICJlbWJlZGRhYmxlIjogZmFsc2UsCiAgICAgICAgInB1YmxpY0RvbWFpbiI6IGZhbHNlLAogICAgICAgICJ0ZXh0VG9TcGVlY2hQZXJtaXNzaW9uIjogIkFMTE9XRUQiLAogICAgICAgICJlcHViIjogewogICAgICAgICAgImlzQXZhaWxhYmxlIjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJwZGYiOiB7CiAgICAgICAgICAiaXNBdmFpbGFibGUiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgIndlYlJlYWRlckxpbmsiOiAiaHR0cDovL3BsYXkuZ29vZ2xlLmNvbS9ib29rcy9yZWFkZXI/aWQ9MHR4c0FBQUFDQUFKJmhsPSZzb3VyY2U9Z2JzX2FwaSIsCiAgICAgICAgImFjY2Vzc1ZpZXdTdGF0dXMiOiAiTk9ORSIsCiAgICAgICAgInF1b3RlU2hhcmluZ0FsbG93ZWQiOiBmYWxzZQogICAgICB9LAogICAgICAic2VhcmNoSW5mbyI6IHsKICAgICAgICAidGV4dFNuaXBwZXQiOiAiRm9yIHVzZSBpbiBzY2hvb2xzIGFuZCBsaWJyYXJpZXMgb25seS4gUnVmdXMgSGVucnksIGEgeW91bmcgcGFyb2xlZSwgamVvcGFyZGl6ZXMgaGlzIGxpZmUgd2hlbiBoZSByZWZ1c2VzIHRvIGNvb3BlcmF0ZSB3aXRoIHRoZSBuZWlnaGJvcmhvb2Qgc3RyZWV0IGdhbmcuIgogICAgICB9CiAgICB9CiAgXQp9Cg==
  recorded_at: Fri, 23 Aug 2024 00:25:28 GMT
- request:
    method: get
    uri: https://www.googleapis.com/books/v1/volumes?key=DONT_SHARE_MY_KEY&q=holidays
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.10.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Fri, 23 Aug 2024 00:25:36 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 23 Aug 2024 00:25:36 GMT
recorded_with: VCR 6.2.0
